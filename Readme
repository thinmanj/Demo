Instructions
============

The instructions for install on Alwaysdata
------------------------------------------

- Login to ssh.alwaysdata.com

- Generate a virtual enviroment

mkdir modules
cat "export PYTHONPATH=~/modules/"" >> .bash_profile
source .bash_profile
easy_install-2.6 –install-dir ~/modules -U pip
easy_install-2.6 –install-dir ~/modules -U virtualenv
mkvirtualenv --no-site-packages myenv

- Last comman enter to the virtual enviroment, but you could enter again with:
source ~/.virtualenv/myenv/bin/activcate

- Extract package
git clone https://github.com/thinmanj/Demo.git
cd Demo

- Install requirements
pip install -r requirements.txt
pip install MySQL-python

- Create public folder
mkdir public

- Copy fcgi file the public folder
cp django.fcgi public

- change configuration on demo/settings.py file to conect to mysql server, following the example used:


================================================================0

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'thinmanj_demo',
        'USER': 'user_name',
        'PASSWORD': 'password',
        'HOST': 'mysql.alwaysdata.com',
        'PORT': '',
    }
}

MEDIA_ROOT = '/home/---YourUserName---/Demo/public/site_media/'
MEDIA_URL = '/site_media/

================================================================0


- you could continue with step 3 on this
(http://wiki.alwaysdata.com/wiki/Deploying_a_Django_App)

Finally alternatives
--------------------

To install django on a wsgi apache 
(https://docs.djangoproject.com/en/dev/howto/deployment/wsgi/modwsgi/)

Better to use gunircon + supervisor + nginx
(http://senko.net/en/django-nginx-gunicorn/)
This is much thinier configuration !!!

Or if you feel venturouso
(http://circus.readthedocs.org/en/0.5/usecases/#running-a-django-application)

A simple installation could be done in a local ubuntu machine (server or desktop)
---------------------------------------------------------------------------------

follow steps:

# Install initial support packages
sudo apt-get install python-virtualenv python-pip fabric mercurial

#create a virtualenv
virtualenv --no-site-packages trial

#enable the virtualenv
cd trial
source bin/activate

# Extract package
git clone https://github.com/thinmanj/Demo.git
cd Demo

# Install requirements
pip install -r requirements.txt

# Initialize sqlite test database (local_settings.py have a small database configuration for sqlite)
./manage.py syncdb
# accept to create super user and fill required information

# Collect static files
./manage.py collectstatic

# Run demo server
./manage.py runsever

# Open browser on http://localhost:8000

# Alternative run demo server on the net
./manage.py runsever 0.0.0.0:8000

# Open browser on http://ip.machine:8000

# test the system.....
